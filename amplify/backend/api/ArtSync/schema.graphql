enum AttachmentType {
  IMAGE
  VIDEO
}

type Attachment @model @auth(rules: [{allow: public}]) {
  id: ID!
  storageKey: String!
  duration: Int
  type: AttachmentType!
  textID: ID! @index(name: "byText")
  chatroomID: ID! @index(name: "byChatRoom")
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  image: String
  users: [User] @manyToMany(relationName: "UserChatRoom")
  Texts: [Text] @hasMany(indexName: "byChatRoom", fields: ["id"])
  Attachments: [Attachment] @hasMany(indexName: "byChatRoom", fields: ["id"])
  LastMessage: Text @hasOne
}

type Text @model @auth(rules: [{allow: public}]) {
  id: ID!
  text: String!
  hasAttachment: Boolean
  createdAt: AWSDateTime!
  userID: ID! @index(name: "byUser")
  Attachments: [Attachment] @hasMany(indexName: "byText", fields: ["id"])
  chatroomID: ID! @index(name: "byChatRoom")
}

enum PostType {
  IMAGE
  VIDEO
  NONE
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  caption: String
  type: PostType
  comment: AWSJSON
  likes: Int
  userID: ID! @index(name: "byUser")
  User: User @belongsTo(fields: ["userID"])
  mediaSrc: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  dob: AWSDate
  email: AWSEmail
  isBusiness: Boolean
  follows: AWSJSON
  experience: String
  genre: String
  bio: String
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  profilePic: AWSURL
  ChatRooms: [ChatRoom] @manyToMany(relationName: "UserChatRoom")
  Texts: [Text] @hasMany(indexName: "byUser", fields: ["id"])
}
 